{"version":3,"file":"static/js/569.70b62143.chunk.js","mappings":"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","sources":["components/TokenPurchaseModal.tsx"],"sourcesContent":["// TokenPurchaseModal.tsx\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport { Slider, Button, Typography, useMediaQuery } from '@mui/material';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport Box from '@mui/material/Box';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { AuthContext } from \"../contexts/AuthContext\";\r\n\r\ninterface TokenPurchaseModalProps {\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n//TEST KEY\r\n//const stripePromise = loadStripe('pk_test_51NBlexCvoPTehrPBp3s5mD8yrmzBBWVOZWO7J6SK6mj9Pxyn6N4fvOvTVd4sX2c7ZhfdlWkMFIo8UDUvpoaCLNsK00Ns90Ks53')\r\n//REAL KEY\r\nconst stripePromise = loadStripe('pk_live_51NBlexCvoPTehrPBwpkaUdDKdtfk9myjOAmZ5yTVDFampl6a6ptINWJ2177a0GwdJpnFPaRMUuI8pfZdrf8VFWHg00SfPUeneh');\r\n\r\nconst TokenPurchaseModal: React.FC<TokenPurchaseModalProps> = ({ open, onClose }) => {\r\n  const [value, setValue] = useState(500);\r\n  const isSmallScreen = useMediaQuery('(max-width:400px)');  // This will be true if the screen width is 400px or less\r\n  const [processing, setProcessing] = useState(false);\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n  const uid = currentUser?.uid;\r\n\r\n  const handleChange = (event: any, newValue: number | number[]) => {\r\n    setValue(newValue as number);\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if(processing) return;\r\n    setProcessing(true);\r\n    // Get the user's location\r\n    const locationResponse = await fetch('https://ipapi.co/json/');\r\n    const locationData = await locationResponse.json();\r\n    const userCountry = locationData.country;\r\n  \r\n    // Determine the currency based on user's location\r\n    let currency = 'usd';  // Default to USD\r\n    if (userCountry === 'US') {\r\n      currency = 'usd';\r\n    } else if (userCountry === 'CA') {\r\n      currency = 'cad';\r\n    }\r\n  \r\n    // Call your server to create the Checkout Session\r\n    const response = await fetch(\"/create-checkout-session\", { \r\n      method: 'POST', \r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ amount: value, currency, uid })\r\n    });\r\n  \r\n    const data = await response.json();\r\n    const sessionId = data.id;\r\n    const stripe = await stripePromise;\r\n  \r\n    if (stripe === null) {\r\n      console.log('Stripe failed to initialize');\r\n      setProcessing(false);\r\n      return;\r\n    }\r\n  \r\n    const { error } = await stripe.redirectToCheckout({\r\n      sessionId,\r\n    });\r\n  \r\n    if (error) {\r\n      console.log('Error:', error);\r\n    }\r\n    setProcessing(false);\r\n  };\r\n  \r\n  \r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} PaperProps={{ style: { borderRadius: 15 } }}>\r\n      <Box sx={{\r\n        paddingX: 2,\r\n        paddingY: 4,\r\n        width: isSmallScreen ? 230 : 300, // Use the isSmallScreen variable to determine the width\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        borderRadius: 8,\r\n        overflowX: 'hidden'\r\n      }}>\r\n        <Typography variant=\"h6\" sx={{ fontWeight: 300 }}>\r\n          Purchase Tokens\r\n        </Typography>\r\n        <Slider\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-labelledby=\"discrete-slider\"\r\n          valueLabelDisplay=\"auto\"\r\n          step={500}\r\n          marks\r\n          min={500}\r\n          max={10000}\r\n          sx={{ \r\n            width: '90%', // Adjust as needed\r\n            color: '#2cb2a5',\r\n            '& .MuiSlider-track': {\r\n              height: '8px',\r\n            },\r\n            '& .MuiSlider-thumb': {\r\n              height: '24px',\r\n              width: '24px',\r\n              backgroundColor: '#2cb2a5',\r\n            },\r\n          }}\r\n        />\r\n        <Typography variant=\"subtitle1\" sx={{ fontWeight: 300 }}>\r\n          {`${value} Tokens`}\r\n        </Typography>\r\n        <Typography variant=\"subtitle1\" sx={{ fontWeight: 300 }}>\r\n          {`ðŸ’²${value / 500}.00`}\r\n        </Typography>\r\n        <Button \r\n          variant=\"contained\" \r\n          sx={{ marginTop: 2, fontWeight: 300, backgroundColor: '#2cb2a5', ':hover': { backgroundColor: '#279f94' } }}\r\n          onClick={handleClick}\r\n        >\r\n          {processing ? \"Redirecting...\" : \"Purchase\"}\r\n        </Button>\r\n      </Box>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default TokenPurchaseModal;\r\n"],"names":["stripePromise","loadStripe","_ref","open","onClose","_useState","useState","_useState2","_slicedToArray","value","setValue","isSmallScreen","useMediaQuery","_useState3","_useState4","processing","setProcessing","currentUser","useContext","AuthContext","uid","handleClick","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","locationResponse","locationData","userCountry","currency","response","data","sessionId","stripe","_yield$stripe$redirec","error","wrap","_context","prev","next","abrupt","fetch","sent","json","country","method","headers","body","JSON","stringify","amount","id","console","log","redirectToCheckout","stop","apply","arguments","_jsx","Dialog","PaperProps","style","borderRadius","children","_jsxs","Box","sx","paddingX","paddingY","width","display","flexDirection","alignItems","overflowX","Typography","variant","fontWeight","Slider","onChange","event","newValue","valueLabelDisplay","step","marks","min","max","color","height","backgroundColor","concat","Button","marginTop","onClick"],"sourceRoot":""}
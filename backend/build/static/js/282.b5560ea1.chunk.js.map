{"version":3,"file":"static/js/282.b5560ea1.chunk.js","mappings":"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","sources":["../node_modules/react-monaco-editor/src/utils.ts","../node_modules/react-monaco-editor/src/diff.tsx","../node_modules/react-monaco-editor/src/editor.tsx","webpack://codespeak/./src/css/CodeEditor.module.css?282d","components/CodeEditor.tsx"],"sourcesContent":["export function processSize(size: number | string) {\n  return !/^\\d+$/.test(size as string) ? size : `${size}px`;\n}\n\nexport function noop() {}\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport * as React from \"react\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { MonacoDiffEditorProps } from \"./types\";\nimport { noop, processSize } from \"./utils\";\n\nfunction MonacoDiffEditor({\n  width,\n  height,\n  value,\n  defaultValue,\n  language,\n  theme,\n  options,\n  overrideServices,\n  editorWillMount,\n  editorDidMount,\n  editorWillUnmount,\n  onChange,\n  className,\n  original,\n}: MonacoDiffEditorProps) {\n  const containerElement = useRef<HTMLDivElement | null>(null);\n\n  const editor = useRef<monaco.editor.IStandaloneDiffEditor | null>(null);\n\n  const _subscription = useRef<monaco.IDisposable | null>(null);\n\n  const __prevent_trigger_change_event = useRef<boolean | null>(null);\n\n  const fixedWidth = processSize(width);\n\n  const fixedHeight = processSize(height);\n\n  const style = useMemo(\n    () => ({\n      width: fixedWidth,\n      height: fixedHeight,\n    }),\n    [fixedWidth, fixedHeight]\n  );\n\n  const handleEditorWillMount = () => {\n    const finalOptions = editorWillMount(monaco);\n    return finalOptions || {};\n  };\n\n  const handleEditorDidMount = () => {\n    editorDidMount(editor.current, monaco);\n\n    const { modified } = editor.current.getModel();\n    _subscription.current = modified.onDidChangeContent((event) => {\n      if (!__prevent_trigger_change_event.current) {\n        onChange(modified.getValue(), event);\n      }\n    });\n  };\n\n  const handleEditorWillUnmount = () => {\n    editorWillUnmount(editor.current, monaco);\n  };\n\n  const initModels = () => {\n    const finalValue = value != null ? value : defaultValue;\n    const originalModel = monaco.editor.createModel(original, language);\n    const modifiedModel = monaco.editor.createModel(finalValue, language);\n    editor.current.setModel({\n      original: originalModel,\n      modified: modifiedModel,\n    });\n  };\n\n  useEffect(\n    () => {\n      if (containerElement.current) {\n        // Before initializing monaco editor\n        handleEditorWillMount();\n        editor.current = monaco.editor.createDiffEditor(\n          containerElement.current,\n          {\n            ...(className ? { extraEditorClassName: className } : {}),\n            ...options,\n            ...(theme ? { theme } : {}),\n          },\n          overrideServices\n        );\n        // After initializing monaco editor\n        initModels();\n        handleEditorDidMount();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  useEffect(() => {\n    if (editor.current) {\n      editor.current.updateOptions({\n        ...(className ? { extraEditorClassName: className } : {}),\n        ...options,\n      });\n    }\n  }, [className, options]);\n\n  useEffect(() => {\n    if (editor.current) {\n      editor.current.layout();\n    }\n  }, [width, height]);\n\n  useEffect(() => {\n    if (editor.current) {\n      const { original: originalEditor, modified } = editor.current.getModel();\n      monaco.editor.setModelLanguage(originalEditor, language);\n      monaco.editor.setModelLanguage(modified, language);\n    }\n  }, [language]);\n\n  useEffect(() => {\n    if (editor.current) {\n      const { modified } = editor.current.getModel();\n      __prevent_trigger_change_event.current = true;\n      // modifiedEditor is not in the public API for diff editors\n      editor.current.getModifiedEditor().pushUndoStop();\n      // pushEditOperations says it expects a cursorComputer, but doesn't seem to need one.\n      // @ts-expect-error\n      modified.pushEditOperations(\n        [],\n        [\n          {\n            range: modified.getFullModelRange(),\n            text: value,\n          },\n        ]\n      );\n      // modifiedEditor is not in the public API for diff editors\n      editor.current.getModifiedEditor().pushUndoStop();\n      __prevent_trigger_change_event.current = false;\n    }\n  }, [value]);\n\n  useEffect(() => {\n    monaco.editor.setTheme(theme);\n  }, [theme]);\n\n  useEffect(() => {\n    if (editor.current) {\n      const { original: originalEditor } = editor.current.getModel();\n      if (original !== originalEditor.getValue()) {\n        originalEditor.setValue(original);\n      }\n    }\n  }, [original]);\n\n  useEffect(\n    () => () => {\n      if (editor.current) {\n        handleEditorWillUnmount();\n        editor.current.dispose();\n        const { original: originalEditor, modified } =\n          editor.current.getModel();\n        if (originalEditor) {\n          originalEditor.dispose();\n        }\n        if (modified) {\n          modified.dispose();\n        }\n      }\n      if (_subscription.current) {\n        _subscription.current.dispose();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return (\n    <div\n      ref={containerElement}\n      style={style}\n      className=\"react-monaco-editor-container\"\n    />\n  );\n}\n\nMonacoDiffEditor.defaultProps = {\n  width: \"100%\",\n  height: \"100%\",\n  original: null,\n  value: null,\n  defaultValue: \"\",\n  language: \"javascript\",\n  theme: null,\n  options: {},\n  overrideServices: {},\n  editorWillMount: noop,\n  editorDidMount: noop,\n  editorWillUnmount: noop,\n  onChange: noop,\n  className: null,\n};\n\nexport default MonacoDiffEditor;\n","import * as monaco from \"monaco-editor/esm/vs/editor/editor.api\";\nimport * as React from \"react\";\nimport { useEffect, useMemo, useRef } from \"react\";\nimport { MonacoEditorProps } from \"./types\";\nimport { noop, processSize } from \"./utils\";\n\nfunction MonacoEditor({\n  width,\n  height,\n  value,\n  defaultValue,\n  language,\n  theme,\n  options,\n  overrideServices,\n  editorWillMount,\n  editorDidMount,\n  editorWillUnmount,\n  onChange,\n  className,\n}: MonacoEditorProps) {\n  const containerElement = useRef<HTMLDivElement | null>(null);\n\n  const editor = useRef<monaco.editor.IStandaloneCodeEditor | null>(null);\n\n  const _subscription = useRef<monaco.IDisposable | null>(null);\n\n  const __prevent_trigger_change_event = useRef<boolean | null>(null);\n\n  const fixedWidth = processSize(width);\n\n  const fixedHeight = processSize(height);\n\n  const style = useMemo(\n    () => ({\n      width: fixedWidth,\n      height: fixedHeight,\n    }),\n    [fixedWidth, fixedHeight]\n  );\n\n  const handleEditorWillMount = () => {\n    const finalOptions = editorWillMount(monaco);\n    return finalOptions || {};\n  };\n\n  const handleEditorDidMount = () => {\n    editorDidMount(editor.current, monaco);\n\n    _subscription.current = editor.current.onDidChangeModelContent((event) => {\n      if (!__prevent_trigger_change_event.current) {\n        onChange(editor.current.getValue(), event);\n      }\n    });\n  };\n\n  const handleEditorWillUnmount = () => {\n    editorWillUnmount(editor.current, monaco);\n  };\n\n  const initMonaco = () => {\n    const finalValue = value !== null ? value : defaultValue;\n    if (containerElement.current) {\n      // Before initializing monaco editor\n      const finalOptions = { ...options, ...handleEditorWillMount() };\n      editor.current = monaco.editor.create(\n        containerElement.current,\n        {\n          value: finalValue,\n          language,\n          ...(className ? { extraEditorClassName: className } : {}),\n          ...finalOptions,\n          ...(theme ? { theme } : {}),\n        },\n        overrideServices\n      );\n      // After initializing monaco editor\n      handleEditorDidMount();\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(initMonaco, []);\n\n  useEffect(() => {\n    if (editor.current) {\n      if (value === editor.current.getValue()) {\n        return;\n      }\n\n      const model = editor.current.getModel();\n      __prevent_trigger_change_event.current = true;\n      editor.current.pushUndoStop();\n      // pushEditOperations says it expects a cursorComputer, but doesn't seem to need one.\n      model.pushEditOperations(\n        [],\n        [\n          {\n            range: model.getFullModelRange(),\n            text: value,\n          },\n        ],\n        undefined\n      );\n      editor.current.pushUndoStop();\n      __prevent_trigger_change_event.current = false;\n    }\n  }, [value]);\n\n  useEffect(() => {\n    if (editor.current) {\n      const model = editor.current.getModel();\n      monaco.editor.setModelLanguage(model, language);\n    }\n  }, [language]);\n\n  useEffect(() => {\n    if (editor.current) {\n      // Don't pass in the model on update because monaco crashes if we pass the model\n      // a second time. See https://github.com/microsoft/monaco-editor/issues/2027\n      const { model: _model, ...optionsWithoutModel } = options;\n      editor.current.updateOptions({\n        ...(className ? { extraEditorClassName: className } : {}),\n        ...optionsWithoutModel,\n      });\n    }\n  }, [className, options]);\n\n  useEffect(() => {\n    if (editor.current) {\n      editor.current.layout();\n    }\n  }, [width, height]);\n\n  useEffect(() => {\n    monaco.editor.setTheme(theme);\n  }, [theme]);\n\n  useEffect(\n    () => () => {\n      if (editor.current) {\n        handleEditorWillUnmount();\n        editor.current.dispose();\n        const model = editor.current.getModel();\n        if (model) {\n          model.dispose();\n        }\n      }\n      if (_subscription.current) {\n        _subscription.current.dispose();\n      }\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  return (\n    <div\n      ref={containerElement}\n      style={style}\n      className=\"react-monaco-editor-container\"\n    />\n  );\n}\n\nMonacoEditor.defaultProps = {\n  width: \"100%\",\n  height: \"100%\",\n  value: null,\n  defaultValue: \"\",\n  language: \"javascript\",\n  theme: null,\n  options: {},\n  overrideServices: {},\n  editorWillMount: noop,\n  editorDidMount: noop,\n  editorWillUnmount: noop,\n  onChange: noop,\n  className: null,\n};\n\nexport default MonacoEditor;\n","// extracted by mini-css-extract-plugin\nexport default {\"codeEditorContainer\":\"CodeEditor_codeEditorContainer__KF839\",\"react-monaco-editor-container\":\"CodeEditor_react-monaco-editor-container__QP2Ue\",\"placeholder\":\"CodeEditor_placeholder__5xqzG\",\"loadingContainer\":\"CodeEditor_loadingContainer__g7wp5\"};","import React, { useState, useEffect } from 'react';\r\nimport MonacoEditor, { EditorDidMount } from 'react-monaco-editor';\r\nimport { editor as monacoEditor } from 'monaco-editor';\r\nimport styles from '../css/CodeEditor.module.css';\r\n\r\ninterface CodeEditorProps {\r\n  value: string;\r\n  onChange: (newValue: string, event: any) => void;\r\n  language: string;\r\n  height: string;\r\n  loading: boolean;\r\n}\r\n\r\nconst CodeEditor: React.FC<CodeEditorProps> = ({ value, onChange, language, height, loading }) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [isValueSet, setIsValueSet] = useState(false);\r\n  const [editorValue, setEditorValue] = useState(value);\r\n\r\n  const editorDidMount: EditorDidMount = (editor: monacoEditor.IStandaloneCodeEditor, monaco: any) => {\r\n    editor.onDidChangeModelContent((event: monacoEditor.IModelContentChangedEvent) => {\r\n      const newValue = editor.getValue();\r\n      const newTokenCount = Math.ceil((newValue.length / 4) + 600);\r\n  \r\n      if(newTokenCount > 5500) {\r\n        const trimmedValue = newValue.slice(0, (5500 - 600) * 4); // Trim the value to fit the limit\r\n        editor.setValue(trimmedValue);\r\n      } else {\r\n        setIsValueSet(newValue !== '');\r\n        setEditorValue(newValue);\r\n        onChange(newValue, event);\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setEditorValue(value);\r\n  }, [value]);\r\n\r\n  const handleClick = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.codeEditorContainer} style={{ height: height }}>\r\n      {loading ? (\r\n        <div className={styles.loadingContainer}>\r\n          <img src=\"loading.gif\" alt=\"Loading...\" />\r\n        </div>\r\n      ) : (!isFocused && !isValueSet ? (\r\n        <div className={styles.placeholder} onClick={handleClick}>\r\n          Paste Code Here! 👇\r\n        </div>\r\n      ) : (\r\n        <MonacoEditor\r\n          height=\"100%\"\r\n          language={language}\r\n          theme=\"vs\"\r\n          value={editorValue}\r\n          onChange={() => {}}\r\n          editorDidMount={editorDidMount}\r\n          options={{\r\n            scrollbar: {\r\n              vertical: 'hidden',\r\n              verticalScrollbarSize: 0,\r\n            },\r\n            automaticLayout: true,\r\n          }}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"names":["processSize","size","test","concat","noop","MonacoDiffEditor","_a","width","height","value","defaultValue","language","theme","options","overrideServices","editorWillMount","editorDidMount","editorWillUnmount","onChange","className","original","containerElement","useRef","editor","_subscription","__prevent_trigger_change_event","fixedWidth","fixedHeight","style","useMemo","useEffect","current","monaco","__assign","extraEditorClassName","finalValue","originalModel","modifiedModel","setModel","modified","initModels","getModel","onDidChangeContent","event","getValue","handleEditorDidMount","updateOptions","layout","originalEditor","getModifiedEditor","pushUndoStop","pushEditOperations","range","getFullModelRange","text","setValue","dispose","React","ref","defaultProps","MonacoEditor","finalOptions","onDidChangeModelContent","model","undefined","optionsWithoutModel","__rest","_ref","loading","_useState","useState","_useState2","_slicedToArray","isFocused","setIsFocused","_useState3","_useState4","isValueSet","setIsValueSet","_useState5","_useState6","editorValue","setEditorValue","_jsx","styles","children","src","alt","newValue","Math","ceil","length","trimmedValue","slice","scrollbar","vertical","verticalScrollbarSize","automaticLayout","onClick"],"sourceRoot":""}